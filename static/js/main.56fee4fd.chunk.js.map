{"version":3,"sources":["components/CityphotoCompoponent.js","components/HomeComponent.js","components/DatepickerComponent.js","components/SearchComponent.js","components/AboutusComponent.js","components/ContactusComponent.js","shared/hotelInformation.js","components/NavbarComponent.js","components/FooterComponent.js","shared/roomsInformation.js","components/MainComponent.js","App.js","serviceWorker.js","index.js","assets/images/moscow_cookie_hotel_main.png"],"names":["CityPhoto","props","hotelsImages","hotelInfo","map","hotel","react_default","a","createElement","Col","xs","sm","className","key","id","Card","CardBody","CardTitle","city","CardImg","src","main_photo","alt","name","CardText","Fragment","Home","Container","Row","CityphotoCompoponent","react_router_dom","color","size","to","DatePickerForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDayClick","bind","assertThisInitialized","handleResetClick","state","getInitialState","from","undefined","day","range","DateUtils","addDayToRange","setState","_this$state","modifiers","start","end","concat","toLocaleDateString","onClick","DayPicker_default","numberOfMonths","selectedDays","onDayClick","Date","fromMonth","disabledDays","before","React","Component","defaultProps","RenderRoom","_ref","room","scope","hotelId","maxGuestsNumber","price1guest$","Search","toggleDropDownNumber","toggleDropDownDate","dropdownNumberOpen","dropdownDateOpen","roomsList","roomsInfo","InputGroup","DatepickerComponent","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","InputGroupAddon","Button","Table","About","Contacts","HOTELS_INFO","adress","email","contact_phones","mobile_phone","local_phone","rooms_number","require","NavBar","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","activeClassName","tag","RRNavLink","outline","toggleModal","Footer","ROOMS_INFO","roomNumber","minGuestsNumber","availible","showerInside","Main","basename","process","NavbarComponent","react_router","exact","path","HomeComponent","SearchComponent","AboutusComponent","ContactusComponent","FooterComponent","App","MainComponent_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.56fee4fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Col } from 'reactstrap';\nimport {\n    Card, CardImg, CardBody,\n    CardTitle, CardText\n} from 'reactstrap';\n\nfunction CityPhoto(props) {\n    let hotelsImages = props.hotelInfo.map((hotel) => {\n        return (\n\n            <Col xs=\"12\" sm=\"3\" className=\"text-center\" key={hotel.id}>\n                <Card>\n                    <CardBody>\n                        <CardTitle >{hotel.city}</CardTitle>\n                        <CardImg className=\"img-fluid img-thumbnail rounded\" src={hotel.main_photo} alt={hotel.name} />\n                        <CardText>Hotel \"{hotel.name}\"</CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n\n    });\n    return (\n        <React.Fragment>\n            {hotelsImages}\n        </React.Fragment>);\n};\nexport default CityPhoto;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport CityPhoto from './CityphotoCompoponent'\nimport { Link } from 'react-router-dom';\n\nfunction Home(props) {\n    return (\n        <Container>\n            <Row id=\"row-welcome\" className=\"justify-content-center align-items-center\">\n                <Col className=\"text-center\">\n                    <h1>Welcome to the \"Funny Group\" Hotels!</h1>\n                    <p>Choose the city!</p>\n                </Col>\n            </Row>\n            <Row id=\"row-images\" className=\"justify-content-center align-items-center\">\n                <CityPhoto hotelInfo={props.hotelInfo} />\n            </Row>\n            <Row id=\"row-button\" className=\"justify-content-center align-items-center\">\n                <Col xs=\"12\" sm=\"9\" className=\"text-center\">\n                    <Link color=\"secondary\" size=\"sm\" to=\"/search\" >I don't want to choose!</Link>\n                </Col>\n            </Row>\n        </Container>\n    )\n};\nexport default Home;\n","import React from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nclass DatePickerForm extends React.Component {\n    static defaultProps = {\n        numberOfMonths: 2,\n    };\n    constructor(props) {\n        super(props);\n        this.handleDayClick = this.handleDayClick.bind(this);\n        this.handleResetClick = this.handleResetClick.bind(this);\n        this.state = this.getInitialState();\n    }\n    getInitialState() {\n        return {\n            from: undefined,\n            to: undefined,\n        };\n    }\n    handleDayClick(day) {\n        const range = DateUtils.addDayToRange(day, this.state);\n        this.setState(range);\n    }\n    handleResetClick() {\n        this.setState(this.getInitialState());\n    }\n    render() {\n        const { from, to } = this.state;\n        const modifiers = { start: from, end: to };\n        return (\n            <div className=\"RangeExample\">\n                <p>\n                    {!from && !to && 'Select the first day.'}\n                    {from && !to && 'Select the last day.'}\n                    {from &&\n                        to &&\n                        `Selected from ${from.toLocaleDateString()} to\n                ${to.toLocaleDateString()}`}{' '}\n                    {from &&\n                        to && (\n                            <button className=\"link\" onClick={this.handleResetClick}>\n                                Reset\n              </button>\n                        )}\n                </p>\n                <DayPicker\n                    className=\"Selectable\"\n                    numberOfMonths={this.props.numberOfMonths}\n                    selectedDays={[from, { from, to }]}\n                    modifiers={modifiers}\n                    onDayClick={this.handleDayClick}\n                    day={new Date()}\n                    fromMonth={new Date()}\n                    disabledDays={\n                        { before: new Date() }\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatePickerForm;","import React from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  Row,\n  Col, Table\n} from 'reactstrap';\nimport DatePickerForm from './DatepickerComponent';\n\nfunction RenderRoom({ room }) {\n  return (\n    <React.Fragment>\n      <tr>\n        <th scope=\"row\">{room.id + 1}</th>\n        <td>{room.hotelId}</td>\n        <td>{room.maxGuestsNumber}</td>\n        <td>{room.price1guest$}</td>\n      </tr>\n    </React.Fragment>\n\n  )\n}\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropDownNumber = this.toggleDropDownNumber.bind(this);\n    this.toggleDropDownDate = this.toggleDropDownDate.bind(this);\n    this.state = {\n      dropdownNumberOpen: false,\n      dropdownDateOpen: false\n    };\n  }\n\n  toggleDropDownNumber() {\n    this.setState({\n      dropdownNumberOpen: !this.state.dropdownNumberOpen\n    });\n  }\n  toggleDropDownDate() {\n    this.setState({\n      dropdownDateOpen: !this.state.dropdownDateOpen\n    });\n  }\n\n  render() {\n    const roomsList = this.props.roomsInfo.map((room) => {\n      return (\n        <RenderRoom room={room} key={room.id} />\n      );\n    });\n\n    return (\n      <Container className=\"under-nav text-center\">\n        <Row>\n          <Col xs={12}>\n            <h1 className=\"text-center\">Find availible appartments in all our hotels!</h1>\n          </Col>\n        </Row>\n\n        <InputGroup className=\"row\">\n          <Col xs={12} sm={7}>\n            <DatePickerForm />\n          </Col>\n          <Col xs={12} sm={3} className=\"search-columns\">\n            <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.dropdownNumberOpen} toggle={this.toggleDropDownNumber}>\n              <DropdownToggle caret>\n                Number of guests\n            </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Adults</DropdownItem>\n                <DropdownItem>1</DropdownItem>\n                <DropdownItem>2</DropdownItem>\n                <DropdownItem>3</DropdownItem>\n                <DropdownItem>4</DropdownItem>\n                <DropdownItem>more than 4</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem header>Children from 6 years</DropdownItem>\n                <DropdownItem>1</DropdownItem>\n                <DropdownItem>2</DropdownItem>\n                <DropdownItem>3</DropdownItem>\n                <DropdownItem>4</DropdownItem>\n                <DropdownItem>more than 4</DropdownItem>\n              </DropdownMenu>\n            </InputGroupButtonDropdown>\n          </Col>\n          <Col sm={2} className=\"search-columns\">\n            <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Find!</Button></InputGroupAddon>\n          </Col>\n        </InputGroup>\n        <Row>\n          <Col>\n            <h2>All our rooms</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Hotel</th>\n                  <th>Number of Guests</th>\n                  <th>Price</th>\n                </tr>\n              </thead>\n              <tbody>\n                {roomsList}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\n\nexport default Search;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction About(props) {\n    return (\n        <Container className=\"under-nav text-center\">\n            <Row>\n                <Col xs={12}>\n                    <h1 className=\"text-center\">About Us</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction Contacts(props) {\n    return (\n        <Container className=\"under-nav text-center\">\n            <Row>\n                <Col>\n                    <h1>Contacts</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Contacts;\n","export const HOTELS_INFO = [\n    {\n        id: 0,\n        name: \"Cookie\",\n        city: \"Moscow\",\n        adress: \"Russia, Moscow, Sweet St., 22\",\n        email: \"moscow_cookie@hotels.com\",\n        contact_phones:\n        {\n            mobile_phone: \"+7 (000) 000-00-00\",\n            local_phone: \"+7 (495) 000-00-00\"\n        },\n        rooms_number: 100,\n        main_photo: require(\"../assets/images/moscow_cookie_hotel_main.png\"),\n        //local_time_zone:\n\n    },\n    {\n        id: 2,\n        name: \"Avocado\",\n        city: \"Amsterdam\",\n        adress: \"Russia, Moscow, Sweet St., 22\",\n        email: \"moscow_cookie@hotels.com\",\n        contact_phones:\n        {\n            mobile_phone: \"+7 (000) 000-00-00\",\n            local_phone: \"+7 (495) 000-00-00\"\n        },\n        rooms_number: 100,\n        main_photo: require(\"../assets/images/moscow_cookie_hotel_main.png\"),\n        //local_time_zone:\n\n    },\n    {\n        id: 3,\n        name: \"Ice Cream\",\n        city: \"New York\",\n        adress: \"Russia, Moscow, Sweet St., 22\",\n        email: \"moscow_cookie@hotels.com\",\n        contact_phones:\n        {\n            mobile_phone: \"+7 (000) 000-00-00\",\n            local_phone: \"+7 (495) 000-00-00\"\n        },\n        rooms_number: 100,\n        main_photo: require(\"../assets/images/moscow_cookie_hotel_main.png\"),\n        //local_time_zone:\n\n    }\n]","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Button\n} from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar color=\"dark\" dark className=\"fixed-top\" expand=\"sm\">\n          <Container>\n            <NavbarBrand href=\"/\">\"Funny Group\" Hotels</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink to=\"/search\" activeClassName=\"active\" tag={RRNavLink}>Find a room! </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/about\" activeClassName=\"active\" tag={RRNavLink}>About Us</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/photo_gallery\" activeClassName=\"active\" tag={RRNavLink}>Photo Gallery</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/contacts\" activeClassName=\"active\" tag={RRNavLink}>Contact Us</NavLink>\n                </NavItem>\n              </Nav>\n              <Nav>\n                <NavItem className=\"ml-auto\" navbar=\"true\">\n                  <Button outline onClick={this.toggleModal}>\n                    Login\n                  </Button>\n                </NavItem>\n              </Nav>\n\n            </Collapse>\n          </Container>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction Footer(props) {\n    return (\n        <div className='footer bg-dark text-white'>\n            <Container>\n                <Row>\n                    <Col>\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <Row>\n                                <Col>\n                                    <li><Link to='/home'>Choose City</Link></li>\n                                    <li><Link to='/search'>Find a room!</Link></li>\n                                    <li><Link to='/about'>About Us</Link></li>\n                                </Col>\n                                <Col>\n\n                                    <li><Link to='/photo_gallery'>Photo Gallery</Link></li>\n                                    <li><Link to='/contacts'>Contact Us</Link></li>\n                                </Col>\n                            </Row>\n\n                        </ul>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n\n    );\n}\n\nexport default Footer;\n\n\n\n","export const ROOMS_INFO = [\n    {\n        id: 0,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n        //main_photo: \"assets/images/moscow_cookie_hotel_main.png\" ,\n\n\n    },\n    {\n        id: 1,\n        hotelId: 0,\n        roomNumber: 2,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 21\n\n    },\n    {\n        id: 2,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    },\n    {\n        id: 3,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    },\n    {\n        id: 4,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    }\n]","import React from 'react';\nimport Home from './HomeComponent';\nimport Search from './SearchComponent';\nimport About from './AboutusComponent';\nimport Contacts from './ContactusComponent';\nimport { HOTELS_INFO } from '../shared/hotelInformation';\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport NavBar from './NavbarComponent';\nimport Footer from './FooterComponent';\nimport { ROOMS_INFO } from '../shared/roomsInformation';\n\nexport default class Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hotelInfo: HOTELS_INFO,\n      roomsInfo: ROOMS_INFO\n    };\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavBar />\n          <Switch>\n            <Route exact path='/'>\n              <Home hotelInfo={this\n                .state.hotelInfo} />\n            </Route>\n            <Route path='/search'>\n              <Search roomsInfo={this\n                .state.roomsInfo} />\n            </Route>\n            <Route path='/about'>\n              <About />\n            </Route>\n            <Route path='/contacts' >\n              <Contacts />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n          <Footer />\n        </Router>\n      </React.Fragment>\n    );\n  }\n\n}\n","import React from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Main />\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/moscow_cookie_hotel_main.4bcafd01.png\";"],"sourceRoot":""}