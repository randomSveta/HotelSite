{"version":3,"sources":["images/home-page/nice.png","images/home-page/good.png","images/home-page/kind.png","images/hotels-logo.png","components/pages/home/CityPhoto.js","hotels-data/hotels-info.js","components/pages/home/Home.js","components/pages/search/Datepicker.js","hotels-data/rooms-info.js","components/pages/search/Search.js","components/pages/about/About.js","components/pages/contacts/Contact.js","components/pages/gallery/Gallery.js","components/pages/pages.js","components/navigation/nav-links.js","components/navigation/NavBar.js","components/footer/Footer.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CityPhoto","props","className","to","hotel","city","toLowerCase","replace","src","photo","alt","HOTELS_INFO","id","name","adress","email","contacPhones","mobilePhone","localPhone","roomsNumber","require","contactPhones","Home","citiesPhotos","map","i","Row","key","Col","xs","citiesRooms","logoURL","Container","md","exact","DatePickerForm","handleDayClick","bind","handleResetClick","state","getInitialState","from","undefined","day","range","DateUtils","addDayToRange","this","setState","modifiers","start","end","toLocaleDateString","onClick","numberOfMonths","selectedDays","onDayClick","Date","fromMonth","disabledDays","before","React","Component","defaultProps","ROOMS_INFO","hotelId","roomNumber","minGuestsNumber","maxGuestsNumber","availible","showerInside","price1guest$","RenderRoom","room","Fragment","scope","Search","toggleDropDownNumber","toggleDropDownDate","dropdownNumberOpen","dropdownDateOpen","roomsList","InputGroup","sm","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","InputGroupAddon","Button","color","Table","About","Contacts","Gallery","PAGES","title","url","component","Contact","navLinks","page","NavBar","Footer","listItems","navLink","Main","routes","path","basename","process","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5968d80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nice.059a7e39.png\";","module.exports = __webpack_public_path__ + \"static/media/good.41809629.png\";","module.exports = __webpack_public_path__ + \"static/media/kind.696cd2ac.png\";","module.exports = __webpack_public_path__ + \"static/media/hotels-logo.6f76f884.png\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default function CityPhoto(props) {\n    return (\n\n        <Link className=\"relative\" to={\"/search?city=\" + props.hotel.city.toLowerCase().replace(\" \", \"-\")} >\n            <img src={props.hotel.photo} className=\"image-size img-fluid overflow-hidden m-0 p-0\" alt={props.hotel.city + \" photo\"} />\n            <p className=\"city-name-text gold-color-bg\">{props.hotel.city}</p>\n        </Link>\n\n    )\n\n};\n","export const HOTELS_INFO = [\n        {\n                id: 0,\n                name: \"Nice People\",\n                city: \"Nicecity\",\n                adress: \"Nicecountry, Nicecity, Nice St., 22\",\n                email: \"nice_cookie@random.sveta\",\n                contacPhones:\n                {\n                        mobilePhone: \"+7 (000) 000-00-00\",\n                        localPhone: \"+7 (000) 000-00-00\"\n                },\n                roomsNumber: 100,\n                photo: require(\"../images/home-page/nice.png\"),\n                //local_time_zone:\n\n        },\n        {\n                id: 2,\n                name: \"Good People\",\n                city: \"Goodcity\",\n                adress: \"Goodcountry, Goodcity, Good St., 22\",\n                email: \"good_cookie@random.sveta\",\n                contactPhones:\n                {\n                        mobilePhone: \"+7 (000) 000-00-00\",\n                        localPhone: \"+7 (000) 000-00-00\"\n                },\n                roomsNumber: 100,\n                photo: require(\"../images/home-page/good.png\"),\n                //local_time_zone:\n\n        },\n        {\n                id: 3,\n                name: \"Kind People\",\n                city: \"Kindcity\",\n                adress: \"Kindcountry, Kindcity, Kind St., 22\",\n                email: \"kind_cookie@random.sveta\",\n                contactPhones:\n                {\n                        mobilePhone: \"+7 (000) 000-00-00\",\n                        localPhone: \"+7 (000) 000-00-00\"\n                },\n                roomsNumber: 100,\n                photo: require(\"../images/home-page/kind.png\"),\n                //local_time_zone:\n\n        }\n]","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport CityPhoto from './CityPhoto'\nimport { HOTELS_INFO } from \"../../../hotels-data/hotels-info\";\nimport { Link } from \"react-router-dom\";\nimport \"./home.css\";\n\n\nexport default function Home(props) {\n\n    const citiesPhotos = HOTELS_INFO.map((hotel, i) => {\n        return (\n            <Row className=\"row-m-p row-height justify-content-center align-items-center gray-color-bg opacity-08\" key={i}>\n                <Col xs=\"12\" className=\"m-0 p-0\">\n                    <CityPhoto hotel={hotel} />\n                </Col>\n            </Row>\n        );\n\n    });\n\n    const citiesRooms = HOTELS_INFO.map((hotel, i) => {\n        return (\n            <li>{hotel.city}: {i + 5}</li>\n        );\n\n    });\n\n    const logoURL = require(\"../../../images/hotels-logo.png\");\n\n    return (\n        <Container className=\"p-0 my-0 mx-auto  container-home\">\n            <Row className=\"m-0 p-0 row-home justify-content-left align-items-start\">\n                <Col md=\"3\" className=\"text-center col-m-p\">\n                    <Row className=\"row-m-p row-height gold-color-bg justify-content-center align-items-center\">\n                        <Col xs=\"12\" className=\"m-0 p-0\">\n                            <h1>Welcome!</h1>\n                            <h3>choose the city</h3>\n                        </Col>\n                    </Row>\n                    <Row className=\"row-m-p row-height gray-color-bg justify-content-center align-items-center\">\n                        <Col xs=\"12\" className=\"m-0 p-0 h-100\">\n                            <Row className=\"m-0 p-0 h-50 align-items-center\">\n                                <Col xs=\"12\" className=\"m-0 p-0\">\n                                    <Link id=\"go-to-search\" className=\"\" to=\"search?city=all\">Check all hotels</Link>\n                                </Col>\n                            </Row>\n                            <Row className=\"m-0 p-0 bg-white h-50 align-items-center justify-content-center\" >\n                                <Col xs=\"6\"><p className=\"m-0 p-0\">available rooms</p></Col>\n                                <Col xs=\"6\">\n                                    <ul className=\"list-unstyled m-0 p-0 text-left\">\n                                        {citiesRooms}\n                                    </ul>\n                                </Col>\n                            </Row>\n\n                        </Col>\n                    </Row>\n                    <Row className=\"row-m-p row-height blue-color-bg justify-content-center align-items-center\">\n                        <Col xs=\"12\" className=\"m-0 p-0\">\n                            <Link to={\"/\"} exact=\"true\">\n                                <img className=\"image-size img-fluid overflow-hidden m-0 p-0\" src={logoURL} alt=\"logo\" />\n                            </Link>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col md=\"8\" className=\"text-center col-m-p\">\n                    {citiesPhotos}\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n/* <Link color=\"secondary\" size=\"sm\" to=\"/search?city=all\" >I don't want to choose!</Link>*/","import React from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nclass DatePickerForm extends React.Component {\n    static defaultProps = {\n        numberOfMonths: 2,\n    };\n    constructor(props) {\n        super(props);\n        this.handleDayClick = this.handleDayClick.bind(this);\n        this.handleResetClick = this.handleResetClick.bind(this);\n        this.state = this.getInitialState();\n    }\n    getInitialState() {\n        return {\n            from: undefined,\n            to: undefined,\n        };\n    }\n    handleDayClick(day) {\n        const range = DateUtils.addDayToRange(day, this.state);\n        this.setState(range);\n    }\n    handleResetClick() {\n        this.setState(this.getInitialState());\n    }\n    render() {\n        const { from, to } = this.state;\n        const modifiers = { start: from, end: to };\n        return (\n            <div className=\"RangeExample\">\n                <p>\n                    {!from && !to && 'Select the first day.'}\n                    {from && !to && 'Select the last day.'}\n                    {from &&\n                        to &&\n                        `Selected from ${from.toLocaleDateString()} to\n                ${to.toLocaleDateString()}`}{' '}\n                    {from &&\n                        to && (\n                            <button className=\"link\" onClick={this.handleResetClick}>\n                                Reset\n              </button>\n                        )}\n                </p>\n                <DayPicker\n                    className=\"Selectable\"\n                    numberOfMonths={this.props.numberOfMonths}\n                    selectedDays={[from, { from, to }]}\n                    modifiers={modifiers}\n                    onDayClick={this.handleDayClick}\n                    day={new Date()}\n                    fromMonth={new Date()}\n                    disabledDays={\n                        { before: new Date() }\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatePickerForm;","export const ROOMS_INFO = [\n    {\n        id: 0,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n        //main_photo: \"assets/images/moscow_cookie_hotel_main.png\" ,\n\n\n    },\n    {\n        id: 1,\n        hotelId: 0,\n        roomNumber: 2,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 21\n\n    },\n    {\n        id: 2,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    },\n    {\n        id: 3,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    },\n    {\n        id: 4,\n        hotelId: 0,\n        roomNumber: 1,\n        minGuestsNumber: 1,\n        maxGuestsNumber: 4,\n        availible: true,\n        showerInside: true,\n        price1guest$: 20\n\n    }\n]","import React from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  Row,\n  Col, Table\n} from 'reactstrap';\nimport DatePickerForm from './Datepicker';\nimport { ROOMS_INFO } from \"../../../hotels-data/rooms-info\";\n\nfunction RenderRoom({ room }) {\n  return (\n    <React.Fragment>\n      <tr>\n        <th scope=\"row\">{room.id + 1}</th>\n        <td>{room.hotelId}</td>\n        <td>{room.maxGuestsNumber}</td>\n        <td>{room.price1guest$}</td>\n      </tr>\n    </React.Fragment>\n\n  )\n}\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropDownNumber = this.toggleDropDownNumber.bind(this);\n    this.toggleDropDownDate = this.toggleDropDownDate.bind(this);\n    this.state = {\n      dropdownNumberOpen: false,\n      dropdownDateOpen: false\n    };\n  }\n\n  toggleDropDownNumber() {\n    this.setState({\n      dropdownNumberOpen: !this.state.dropdownNumberOpen\n    });\n  }\n  toggleDropDownDate() {\n    this.setState({\n      dropdownDateOpen: !this.state.dropdownDateOpen\n    });\n  }\n\n  render() {\n    const roomsList = ROOMS_INFO.map((room) => {\n      return (\n        <RenderRoom room={room} key={room.id} />\n      );\n    });\n\n    return (\n      <Container className=\"under-nav text-center\">\n        <Row>\n          <Col xs={12}>\n            <h1 className=\"text-center\">Find availible appartments in all our hotels!</h1>\n          </Col>\n        </Row>\n\n        <InputGroup className=\"row\">\n          <Col xs={12} sm={7}>\n            <DatePickerForm />\n          </Col>\n          <Col xs={12} sm={3} className=\"search-columns\">\n            <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.dropdownNumberOpen} toggle={this.toggleDropDownNumber}>\n              <DropdownToggle caret>\n                Number of guests\n            </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Adults</DropdownItem>\n                <DropdownItem>1</DropdownItem>\n                <DropdownItem>2</DropdownItem>\n                <DropdownItem>3</DropdownItem>\n                <DropdownItem>4</DropdownItem>\n                <DropdownItem>more than 4</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem header>Children from 6 years</DropdownItem>\n                <DropdownItem>1</DropdownItem>\n                <DropdownItem>2</DropdownItem>\n                <DropdownItem>3</DropdownItem>\n                <DropdownItem>4</DropdownItem>\n                <DropdownItem>more than 4</DropdownItem>\n              </DropdownMenu>\n            </InputGroupButtonDropdown>\n          </Col>\n          <Col sm={2} className=\"search-columns\">\n            <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Find!</Button></InputGroupAddon>\n          </Col>\n        </InputGroup>\n        <Row>\n          <Col>\n            <h2>All our rooms</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Hotel</th>\n                  <th>Number of Guests</th>\n                  <th>Price</th>\n                </tr>\n              </thead>\n              <tbody>\n                {roomsList}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\n\nexport default Search;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction About(props) {\n    return (\n        <Container className=\"under-nav text-center\">\n            <Row>\n                <Col xs={12}>\n                    <h1 className=\"text-center\">About Us</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction Contacts(props) {\n    return (\n        <Container className=\"under-nav text-center\">\n            <Row>\n                <Col>\n                    <h1>Contacts</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Contacts;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nexport default function Gallery(props) {\n    return (\n        <Container>\n            <Row id=\"row-welcome\" className=\"justify-content-center align-items-center\">\n                <Col className=\"text-center\">\n                    <h1>Gallery</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n","import React from 'react';\nimport Home from './home/Home';\nimport Search from './search/Search';\nimport About from './about/About';\nimport Contacts from './contacts/Contact';\nimport Gallery from \"./gallery/Gallery\";\n\nexport const PAGES = [\n    {\n        id: 0,\n        title: \"Home\",\n        url: \"/\",\n        component: <Home />\n    },\n    {\n        id: 1,\n        title: \"Search\",\n        url: \"/search\",\n        component: <Search />\n    },\n    {\n        id: 2,\n        title: \"About\",\n        url: \"/about\",\n        component: <About />\n    },\n    {\n        id: 3,\n        title: \"Gallery\",\n        url: \"/gallery\",\n        component: <Gallery />\n    },\n    {\n        id: 4,\n        title: \"Contacts\",\n        url: \"/contacts\",\n        component: <Contacts />\n    }\n];\n\n","\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { PAGES } from \"../pages/pages\";\n\nexport const navLinks = PAGES.map((page, i) => {\n    return (\n        <NavLink to={page.url} exact={page.title === \"Home\" ? true : false} key={i} id={page.title.toLowerCase()}>{page.title}</NavLink>\n    );\n});","import React from 'react';\nimport { navLinks } from \"../navigation/nav-links\";\nimport \"./navigation.css\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav id=\"side-navigation\" className=\"side-nav overflow-hidden\">\n          {navLinks}\n          <button id=\"login-button\">Login</button>\n        </nav>\n      </React.Fragment >\n    );\n  }\n}","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { navLinks } from \"../navigation/nav-links\";\nimport \"./footer.css\"\n\nexport default function Footer(props) {\n\n    const listItems = navLinks.map(navLink => {\n        return <li className=\"list-inline-item\">{navLink}</li>\n    })\n\n    return (\n        <footer className='footer-height w-100 footer-colors'>\n            <Container className=\"my-0 mx-auto p-0 footer-height\">\n                <Row className=\"m-0 p-0 footer-height justify-content-left align-items-center\">\n                    <Col xs=\"12\" md=\"8\" className=\"col-m-p\">\n                        <ul className=\"list-unstyled list-inline m-0 p-0\">\n                            {listItems}\n                        </ul>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\" className=\"col-m-p\">\n                        <p className=\"m-0 p-0 text-right\">good_hotels_group@random.sveta</p>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n\n    );\n}\n\n\n\n","import React from 'react';\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport NavBar from './navigation/NavBar';\nimport Footer from './footer/Footer';\nimport { PAGES } from \"./pages/pages\"\n\nexport default class Main extends React.Component {\n\n  render() {\n\n    const routes = PAGES.map((page, i) => {\n\n      let route =\n        <Route path={page.url} key={i} exact={page.title === \"Home\" ? true : false}>\n          {page.component}\n        </Route>\n\n      return route;\n    });\n\n    return (\n      <React.Fragment>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavBar />\n          <Switch>\n            {routes}\n            <Redirect to=\"/\" />\n          </Switch>\n          <Footer />\n        </Router>\n      </React.Fragment >\n    );\n  }\n\n}\n","import React from 'react';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Main />\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}